def get_solver(rule: AutoRuleBook) -> Any: ...

class RuledData:
    data: 'AutoData2'
    rulebook: AutoRuleBook
    def value(self) -> Any: ...
    def format(self) -> Any: ...
    def override(self, book: AutoRuleBook) -> Any: ...
    def cast(self, new_format) -> Any: ...
    def converter(self, dst_format) -> Any: ...
    def convert(self, dst_format) -> 'RuledData': ...
    def to(self, dst_format) -> Any: ...
    def map(self, f, format = ...) -> Any: ...

class AutoData2:
    value: Any
    format: Any
    def with_rules(self, rulebook: AutoRuleBook) -> Any: ...

